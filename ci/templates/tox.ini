[tox]
envlist =
    clean,
    check,
    docs,
{% for env in tox_environments|sort %}
    {{ env }},
{% endfor %}
    report

[testenv]
basepython =
    docs: {env:TOXPYTHON:python3}
    {bootstrap,clean,check,report,codecov}: {env:TOXPYTHON:python3}
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
passenv =
    *
deps =
    pytest
    pytest-travis-fold
    coverage[toml]
commands =
    python setup.py clean --all build_ext --force --inplace
    {posargs:pytest -vv --ignore=src}

[testenv:bootstrap]
deps =
    jinja2
    matrix
skip_install = true
commands =
    python ci/bootstrap.py --no-env

[testenv:check]
deps =
    docutils
    check-manifest
    flake8
    black
    readme-renderer
    pygments
    isort
    bandit
skip_install = true
commands =
    python setup.py check --strict --metadata --restructuredtext
    check-manifest {toxinidir}
    black src tests setup.py
    flake8 --config flake8.ini src tests setup.py
    isort --verbose --check-only --diff --recursive src tests setup.py
    bandit -r src

[testenv:docs]
usedevelop = true
deps =
    -r{toxinidir}/docs/requirements.txt
commands =
    sphinx-build {posargs:-E} -b html docs dist/docs
    sphinx-build -b linkcheck docs dist/docs

[testenv:codecov]
deps =
    codecov
skip_install = true
commands =
    codecov []

[testenv:report]
deps = coverage
skip_install = true
commands =
    coverage report
    coverage html
    coverage xml

[testenv:clean]
commands = coverage erase
skip_install = true
deps = coverage
{% for env, config in tox_environments|dictsort %}

[testenv:{{ env }}]
basepython = {env:TOXPYTHON:{{ env.split("-")[0] if env.startswith("pypy") else "python{0[2]}.{0[3]}".format(env) }}}
{% if config.cover or config.env_vars %}
setenv =
    {[testenv]setenv}
{% endif %}
{% for var in config.env_vars %}
    {{ var }}
{% endfor %}
{% if config.cover %}
    SETUPPY_CFLAGS=-coverage
usedevelop = true
commands =
    python setup.py clean --all build_ext --force --inplace
    {posargs:pytest --cov --cov-report=term-missing -vv}
{% endif %}
{% if config.cover or config.deps %}
deps =
    {[testenv]deps}
{% endif %}
{% if config.cover %}
    pytest-cov
{% endif %}
{% for dep in config.deps %}
    {{ dep }}
{% endfor -%}
{% endfor -%}
